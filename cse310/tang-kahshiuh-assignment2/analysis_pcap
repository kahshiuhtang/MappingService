Part 1:
- To calculate the different flows, I used a map to keep track of unique src/dest ip/port combinations. I consider the key that you would recieve to be the same as the one you would send. 

- I used enums to keep track of the state a flow was in. I would print out the SEQ, ACK numbers and Recieve Window size when I sent the first and second segements sent after the initial handshake. Using bit manipulation and the dpkt 

- I would keep track of how many bytes I has sent starting with the first SYN segment to the last ACK segment. I would also keep track of the time of the first and last segment sent. Dividing these two gave me the throughput for each flow. I don't keep track of any segments that were sent TO ME, only segments that were sent OUT.

Part 2:
- I calculate the first RTT by using the time difference between the first SYN and SYN/ACK response. I would recalculate the window size every RTT, but I would not ever actually recalculate the RTT value. I would look at the MAX amount of segments out during the this timeframe and call that the congestion window size. I kept track of how many segements did not have a response ACK and would remove them from the list once that response came in.

- To keep track of the retransmissions, I looked at how many time any SEQ number was sent out. Every time I saw that a second SEQ number was sent out, I would check to see if I had recieved 1 ACK for it or many ACKs for it. If I had recieved many ACKs, this would indicate that this was a FAST retransmit due to triple duplicate ACK. If I had recieved only one ACK before, I would consider this a retransmission. 

Instructions on running code are in README.md